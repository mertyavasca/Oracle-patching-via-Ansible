 - name: New home deployment playbook
   hosts: "{{host_name}}"     
   become: yes
   become_user: oracle
   become_method: sudo
   gather_facts: no
## This play deploys the new home to the server.
   tasks:

   - name: Check the os type
     shell: uname
     ignore_errors: yes
     register: uname_result

## Gets Oracle db version.

   - name: Get oracle database version
     shell: |
        . ~oracle/.profile
        echo "set head off
        select banner from v\$version where upper(banner) like 'ORACLE DATABASE%';
        exit 0;" | sqlplus -s / as sysdba | cut -d" " -f7 | tr -d '\n' | tr -d '\t'
     args:
       executable: /bin/bash
     register: oracle_version

## Checks for the existence of {{ORACLE_HOME}}.new.

   - name: check if {{ORACLE_HOME}}.new exists
     stat:
        path: "{{ORACLE_HOME}}new"
     register: file_exists

## If {{ORACLE_HOME}}.new is present, it assumes that the previous patch was not correct, and terminates the play.

   - name: Fail if {{ORACLE_HOME}}new exist
     fail:
       msg: "There is {{ORACLE_HOME}}.new, check server"
     when: file_exists.stat.exists

## Creates the new home directory.

   - name: Create new directory
     become: yes
     become_user: oracle
     command: "{{ item }}"
     loop:
       - mkdir -p {{ORACLE_HOME}}.new
## According to the OS it downloads new home from satellite (it looks like 19c control here again)

   - name: AIX home deployment
     become: yes
     become_user: oracle
     get_url:
       url: {{ SATELLITE LINK FOR AIX GOLDIMAGE }}
       dest: {{ORACLE_HOME}}.new
       mode: '0440'
     when: uname_result.stdout == "AIX" and oracle_version.stdout[:4] == "19.0"

   - name: Linux home deployment
     get_url:
       url: {{ SATELLITE LINK FOR Linux GOLDIMAGE }}
       dest: {{ORACLE_HOME}}.new
       mode: '0440'
     when: uname_result.stdout == "Linux" and oracle_version.stdout[:4] == "19.0"

## It unzips the new home it downloaded. Names should be changed hardcoded.

   - name: Home unzip for linux
     unarchive:
       src: {{ORACLE_HOME}}.new/Linux_1918.zip
       dest: {{ORACLE_HOME}}.new
       remote_src: yes
     when: uname_result.stdout == "Linux" and oracle_version.stdout[:4] == "19.0"

   - name: Home unzip for AIX
     unarchive:
       src: {{ORACLE_HOME}}new/AIX_1918.zip
       dest: {{ORACLE_HOME}}new
       remote_src: yes
     when: uname_result.stdout == "AIX" and oracle_version.stdout[:4] == "19.0"

## It copies the network and dbs gold from the old home to the new home.

   - name: Copy /network from old to new home
     copy:
       src: {{ORACLE_HOME}}/network/admin/
       dest: {{ORACLE_HOME}}new/network/admin
       remote_src: true

   - name: Copy /dbs from old home to new one
     copy:
       src: {{ORACLE_HOME}}/dbs/
       dest: {{ORACLE_HOME}}new/dbs
       remote_src: true
