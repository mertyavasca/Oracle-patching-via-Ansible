- name: Home change
  hosts: "{{host_name}}"
  gather_facts: no
## This play replaces the patched oracle home with the unpatched oracle home and runs runInstaller.
  tasks:
## {{ORACLE_HOME}}.old control if exist
  - name: check if {{ORACLE_HOME}}.old exists
    stat:
       path: "{{ORACLE_HOME}}.old"
    register: file_exists
## If {{ORACLE_HOME}}.old exists, it thinks the job is interrupted and ends the play.
  - name: Fail if {{ORACLE_HOME}}.old exist
    fail:
      msg: "There is {{ORACLE_HOME}}.old, check server"
    when: file_exists.stat.exists
## Replaces patched home with unpatched home, creates an empty oraInventory (for runInstaller)
  - name: Create new directory
    become: yes
    become_user: oracle
    command: "{{ item }}"
    loop:
      - mv /oracle/oraInventory /oracle/oraInventory.old
      - mkdir -p /oracle/oraInventory
      - mv {{ORACLE_HOME}} {{ORACLE_HOME}}.old
      - mv {{ORACLE_HOME}}.new {{ORACLE_HOME}}
## Loads the oracle profile. Runs home_setup.sh.
  - name: set db profiles
    become: yes
    become_user: oracle
    shell: |
       . ~oracle/.profile
       sh {{ORACLE_HOME}}/home_kurulum.sh
    args:
      executable: /bin/bash
    register: software_result
    ignore_errors: True
## Interrupts or continues play depending on the result of sh.
  - name: check success or not
    debug:
     msg: "software installation is succeed"
    when: software_result.stdout_lines is search("Successfully")

  - name: check success or not
    fail:
     msg: "software installation is not succeed"
    when: software_result.stdout_lines is not search("Successfully")
